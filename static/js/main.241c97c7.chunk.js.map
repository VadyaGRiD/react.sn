{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/Users.module.css","components/Friends/Friends.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","assets/images/preloader.svg","components/common/Preloader/Preloader.js","hoc/withAuthRedirect.js","redux/dialogs-reducer.js","components/Dialogs/DIalogItem/DialogItem.jsx","components/Dialogs/Messege/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Friends/Friends.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","redux/users-reducer.js","api/api.js","redux/profile-reducer.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Settings/Settings.jsx","assets/images/ava.png","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/auth.reduser.js","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Preloader","props","style","backgroundColor","src","preloader","mapStateToPropsForRederect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","messages","id","message","dialogs","name","avatar","newMessageBody","dialogsReducer","action","type","body","DialogItem","path","className","classes","dialog","active","alt","Message","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","dialogsItems","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","compose","dispatch","updateNewMessageBodyCreator","Friends","Header","header","loginBlock","login","HeaderContainer","LoginForm","Login","Music","Navbar","nav","item","activeClassName","activeLink","News","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","userId","usersReducer","u","followed","count","filter","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","get","then","response","data","follow","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","posts","likesCount","newPostText","profile","setStatus","profileReducer","newPost","newText","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","currentTarget","autoFocus","onBlur","ProfileInfo","descriptionBlock","photos","large","Post","MyPosts","memo","postsElements","p","newPostElement","createRef","postsBlock","text","current","updateNewPostText","ref","addPost","MyPostsContainer","profilePage","updateNewPostTextActionCreator","Profile","ProfileContainer","match","params","getUserProfile","resultCode","withRouter","Settings","Users","pagesCount","Math","ceil","pages","i","push","selectedPage","onPageChanged","small","userPhoto","disabled","some","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","followSuccess","unfollowSuccess","page","items","totalCount","SET_USER_DATA","email","getAuthUserData","setAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","friends","sidebarReducer","reducers","combineReducers","sidebarPage","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.241c97c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2D-ef\",\"dialogsItems\":\"Dialogs_dialogsItems__3TW5G\",\"active\":\"Dialogs_active__3df0o\",\"messages\":\"Dialogs_messages__26amu\",\"message\":\"Dialogs_message__OwsP5\",\"avatar\":\"Dialogs_avatar__1PRLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__22HV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1LT_5\",\"loginBlock\":\"Header_loginBlock__2qSSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__yo28L\",\"posts\":\"MyPosts_posts__3wDcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1VgAs\",\"selectedPage\":\"Users_selectedPage__35BC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Friends_avatar__1p07p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3N4dq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3fa5C\",\"item\":\"Navbar_item__1Ul-V\",\"activeLink\":\"Navbar_activeLink__1_coj\"};","export default __webpack_public_path__ + \"static/media/preloader.b988d774.svg\";","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ {backgroundColor:'white'} }>\r\n            <img src={preloader}/>\r\n        </div>\r\n}\r\n export default Preloader;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRederect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRederect) (RedirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n}","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        { id: 1, message: 'Дарова' },\r\n        { id: 2, message: 'Геральт, ты где пропал?' },\r\n        { id: 3, message: 'Будешь чистить все мечи Каэр Морхена!' }\r\n    ],\r\n    dialogs: [\r\n        { id: 1, name: 'Геральт', avatar: \"https://steamuserimages-a.akamaihd.net/ugc/924805934474316745/E44AC605B446C8420FF450DDDEB428BC89D16BC8/\" },\r\n        { id: 2, name: 'Цири', avatar: \"https://steamuserimages-a.akamaihd.net/ugc/929300535102419902/B743DF45ED59EADF3ABD5AAADEA1EC20AC353BF9/\" },\r\n        { id: 3, name: 'Ламберт', avatar: \"http://pm1.narvii.com/7086/f8fc1c445305237ad4b634b0ead1d0d7952ae5a4r1-793-1166v2_00.jpg\" },\r\n        { id: 4, name: 'Эскель', avatar: \"http://pm1.narvii.com/6879/a7ec8a1201d5af4630907fb9f9d472ca45e18de8r1-720-892v2_00.jpg\" },\r\n        { id: 5, name: 'Трисс', avatar: \"https://i.playground.ru/i/pix/2071598/image.jpg\" }\r\n    ],\r\n\r\n    newMessageBody: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, { id: 4, message: body }]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport const sendMessageCtreator = () => ({ type: SEND_MESSAGE })\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({ type: UPDATE_NEW_MESSAGE_BODY, body: body })\r\n\r\nexport default dialogsReducer;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={classes.dialog + ' ' + classes.active}>\r\n        <div><img className={classes.avatar} alt='ava' src={props.avatar} />\r\n            <NavLink to={path}>{props.name}</NavLink></div>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.dialog}>{props.message}</div>\r\n}\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DialogItem from './DIalogItem/DialogItem';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Messege/Message';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} avatar={d.avatar} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body)\r\n    }\r\n    if (!props.isAuth) return <Redirect to={'/login'} /> ;\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div><textarea value= {newMessageBody}\r\n                onChange= {onNewMessageChange}\r\n                 placeholder=\"Enter your message\">\r\n                     </textarea></div>\r\n                <div><button onClick ={onSendMessageClick}>Send</button></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCtreator, updateNewMessageBodyCreator } from \"../../redux/dialogs-reducer\"\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCtreator());\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\r\nimport classes from './Friends.module.css';\r\n\r\n\r\nconst Friends = (props) => {\r\n    return <div><img className={classes.avatar} alt='ava' src={props.avatar} />{props.name}\r\n    </div>\r\n}\r\nexport default Friends;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => { \r\n    return <header className={classes.header}>\r\n        <img src=\"https://englex.ru/app/uploads/learn-english-with-the-witcher.jpg\"/>\r\n        <img src=\"https://avatars.mds.yandex.net/get-zen_doc/1889495/pub_5ef24f708d3a946a7b6377d8_5ef255fbb0fd6233b085f755/scale_1200\"/>\r\n        <div className={classes.loginBlock}>\r\n            { props.isAuth ? props.login\r\n            :<NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>;\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\nexport default connect(mapStateToProps)(HeaderContainer);","import React from 'react';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                <input placeholder={\"Login\"} />\r\n            </div>\r\n            <div>\r\n                <input placeholder={\"Password\"} />\r\n            </div>\r\n            <div>\r\n                <input type={\"checkbox\"} /> remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst Login = (props) => {\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginForm />\r\n    </div>\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/friends\" activeClassName={classes.activeLink}>Friends</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import { usersAPI } from \"../api/api\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:{\r\n            return {...state,\r\n            followingInProgress: action.isFetching\r\n            ? [...state.followingInProgress, action.userId]\r\n            : state.followingInProgress.filter(id=>id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.requestUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));;\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch (followSuccess(userId))\r\n                }\r\n                dispatch (toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch (unfollowSuccess(userId))\r\n                }\r\n                dispatch (toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\nimport { follow } from \"../redux/users-reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"227dfd44-b1eb-4d84-be8e-028b325f3b03\"\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profiAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE='SET_USER_PROFILE';\r\nconst SET_STATUS='SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Всем привет. Кто где?', likesCount: 3 },\r\n        { id: 2, message: 'Скоро зима, собирайтесь в Каэр Морхен?', likesCount: 5 },\r\n        { id: 3, message: 'Нужно все наши тропы маскировать!', likesCount: 1 },\r\n        { id: 4, message: 'Еще василиск от куда то взялся', likesCount: 5 }],\r\n    newPostText: 'Witcher',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status})\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data))\r\n    });\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data))\r\n    });\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then(response => {\r\n        if (response.data.resultCode === 0){\r\n        dispatch(setStatus(status))\r\n    }\r\n    });\r\n}\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'Hello Witcher!!!'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\nlet [editMode, setEditMode] = useState(false)\r\nlet [status, setStatus] = useState(props.status)\r\n\r\nuseEffect ( () => {\r\n    setStatus(props.status);\r\n}, [props.status])\r\n\r\nconst activateEditMode = () => {\r\n    setEditMode(true)\r\n}\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status);\r\n}\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || 'Hello Witcher!!!'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true}\r\n                    onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\nif(!props.profile) {\r\n  return <Preloader />\r\n}\r\n\r\n  return (\r\n  <div>\r\n    <div>\r\n      {<img src=\"https://cdn.shazoo.ru/c800x360/156640_4VzAUHtq4d_witcher3.jpg\"></img>}\r\n    </div>\r\n    <div className={classes.descriptionBlock}>\r\n      <img src={props.profile.photos.large} />\r\n      <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://cs6.pikabu.ru/images/previews_comm/2015-07_2/1436179532133712006.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div><textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} /></div>\r\n                <div> <button onClick={onAddPost}>Add post</button></div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>)\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDespatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDespatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  \r\n  return <div>\r\n    <ProfileInfo profile={props.profile}\r\n    status={props.status} updateStatus={props.updateStatus}/>\r\n    <div><MyPostsContainer />\r\n    </div>\r\n  </div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 17901;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} \r\n            status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","export default __webpack_public_path__ + \"static/media/ava.0d217ff7.png\";","import React from 'react';\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../assets/images/ava.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className=\r\n                    {props.currentPage === p && classes.selectedPage}\r\n                    onClick={(e) => { props.onPageChanged(p) }}> {p} </span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                                className={classes.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => { props.unfollow(u.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => { props.follow(u.id) }}>\r\n                                Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setCurrentPage, requestUsers, unfollow, toggleFollowingProgress } from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress,\r\n    getIsFetching, getPageSize, getTotalUsersCount,\r\n    getUsers} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    \r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <> \r\n        {this.props.isFetching ?<Preloader /> : null}\r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect (mapStateToProps, { follow, unfollow,\r\n        setCurrentPage, toggleFollowingProgress, requestUsers})\r\n ) (UsersContainer)","import { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({ type: SET_USER_DATA, data: {userId, email, login} })\r\nexport const getAuthUserData = () => (dispatch) => {\r\n   return authAPI.me().then(response => {\r\n        if (response.data.resultCode === 0) {\r\n           let{id, email, login} = response.data.data;\r\n           dispatch (setAuthUserData(id, email, login));\r\n       }\r\n   });\r\n}\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth.reduser\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initialaizedSuccess = () => ({ type: INITIALIZED_SUCCESS})\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n   Promise.all([promise])\r\n   .then(() => {\r\n       dispatch (initialaizedSuccess())\r\n   });\r\n}\r\n\r\nexport default appReducer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Preloader from './components/common/Preloader/Preloader';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport Friends from './components/Friends/Friends';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport Music from './components/Music/Music';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport { initializeApp } from './redux/app-reducer';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path=\"/dialogs\"\n            render={() => <DialogsContainer />} />\n          <Route path=\"/profile/:userId?\"\n            render={() => <ProfileContainer />} />\n          <Route path=\"/news\"\n            render={() => <News />} />\n          <Route path=\"/music\"\n            render={() => <Music />} />\n          <Route path=\"/settings\"\n            render={() => <Settings />} />\n          <Route path=\"/friends\"\n            render={() => <Friends />} />\n          <Route path=\"/users\"\n            render={() => <UsersContainer />} />\n          <Route path=\"/login\"\n            render={() => <LoginPage />} />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose (\n  withRouter,\n    connect(mapStateToProps, { initializeApp }))(App);\n","let initialState = {\r\n    friends: [\r\n        { id: 1, name: 'Геральт', avatar: \"https://steamuserimages-a.akamaihd.net/ugc/924805934474316745/E44AC605B446C8420FF450DDDEB428BC89D16BC8/\" },\r\n        { id: 2, name: 'Цири', avatar: \"https://steamuserimages-a.akamaihd.net/ugc/929300535102419902/B743DF45ED59EADF3ABD5AAADEA1EC20AC353BF9/\" },\r\n        { id: 3, name: 'Ламберт', avatar: \"http://pm1.narvii.com/7086/f8fc1c445305237ad4b634b0ead1d0d7952ae5a4r1-793-1166v2_00.jpg\" }\r\n    ]\r\n}\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport authReducer from \"./auth.reduser\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\n    ReactDOM.render (\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}